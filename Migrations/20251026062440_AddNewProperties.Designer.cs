// <auto-generated />
using System;
using AMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AMS.Migrations
{
    [DbContext(typeof(AMSDbContext))]
    [Migration("20251026062440_AddNewProperties")]
    partial class AddNewProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("AMS.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AdminId");

                    b.ToTable("Admin");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            FullName = "Quản Trị Viên",
                            LastLogin = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            PasswordHash = "$2b$12$Dvin/fmQwvI7yF8PVrC//uRlbRmkTCzsFG1xO7xGOcG/N2QBITIqS",
                            PhoneNumber = "0123456789",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("AMS.Models.House", b =>
                {
                    b.Property<int>("IdHouse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalRooms")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("IdHouse");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            IdHouse = 1,
                            Address = "123 Đường ABC, Quận XYZ, TP HCM",
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Notes = "Nhà cho thuê 10 phòng",
                            TotalRooms = 10,
                            UpdatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("AMS.Models.Room", b =>
                {
                    b.Property<int>("IdRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Area")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("BikeExtraFee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(100000m);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("FreeBikeAllowance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<int>("HouseID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HouseIdHouse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxOccupants")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("IdRoom");

                    b.HasIndex("HouseID");

                    b.HasIndex("HouseIdHouse");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            IdRoom = 1,
                            Area = 25m,
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            FreeBikeAllowance = 1,
                            HouseID = 1,
                            MaxOccupants = 0,
                            Notes = "Phòng thường",
                            Price = 3000000m,
                            RoomCode = "COCONUT",
                            RoomStatus = 0,
                            UpdatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            IdRoom = 2,
                            Area = 25m,
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            FreeBikeAllowance = 1,
                            HouseID = 1,
                            MaxOccupants = 0,
                            Notes = "Phòng thường",
                            Price = 3000000m,
                            RoomCode = "APPLE",
                            RoomStatus = 0,
                            UpdatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            IdRoom = 3,
                            Area = 30m,
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            FreeBikeAllowance = 1,
                            HouseID = 1,
                            MaxOccupants = 0,
                            Notes = "Phòng thường, có 1 con mèo",
                            Price = 3500000m,
                            RoomCode = "BANANA",
                            RoomStatus = 0,
                            UpdatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            IdRoom = 4,
                            Area = 35m,
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            FreeBikeAllowance = 1,
                            HouseID = 1,
                            MaxOccupants = 0,
                            Notes = "Phòng có đồ cơ bản, có 2 con chó",
                            Price = 4000000m,
                            RoomCode = "PAPAYA",
                            RoomStatus = 0,
                            UpdatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            IdRoom = 5,
                            Area = 35m,
                            CreatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            FreeBikeAllowance = 1,
                            HouseID = 1,
                            MaxOccupants = 0,
                            Notes = "Phòng có đồ cơ bản",
                            Price = 4000000m,
                            RoomCode = "STRAWBERRY",
                            RoomStatus = 0,
                            UpdatedAt = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("AMS.Models.RoomOccupancy", b =>
                {
                    b.Property<int>("IdRoomOccupancy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BikeCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<decimal>("DepositContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("MoveInDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("MoveOutDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TenantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdRoomOccupancy");

                    b.HasIndex("RoomId", "MoveOutDate");

                    b.HasIndex("TenantId", "MoveOutDate");

                    b.ToTable("RoomOccupancies");
                });

            modelBuilder.Entity("AMS.Models.Tenant", b =>
                {
                    b.Property<int>("IdTenant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContractUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContactsJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCardNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MonthlyRent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("MoveInDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("MoveOutDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdTenant");

                    b.HasIndex("RoomId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("AMS.Models.Room", b =>
                {
                    b.HasOne("AMS.Models.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AMS.Models.House", null)
                        .WithMany("Rooms")
                        .HasForeignKey("HouseIdHouse");

                    b.Navigation("House");
                });

            modelBuilder.Entity("AMS.Models.RoomOccupancy", b =>
                {
                    b.HasOne("AMS.Models.Room", "Room")
                        .WithMany("RoomOccupancies")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AMS.Models.Tenant", "Tenant")
                        .WithMany("RoomOccupancies")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("AMS.Models.Tenant", b =>
                {
                    b.HasOne("AMS.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("AMS.Models.House", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("AMS.Models.Room", b =>
                {
                    b.Navigation("RoomOccupancies");
                });

            modelBuilder.Entity("AMS.Models.Tenant", b =>
                {
                    b.Navigation("RoomOccupancies");
                });
#pragma warning restore 612, 618
        }
    }
}
